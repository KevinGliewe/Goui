### YamlMime:ManagedReference
items:
- uid: Goui.TextNode
  commentId: T:Goui.TextNode
  id: TextNode
  parent: Goui
  children:
  - Goui.TextNode.#ctor
  - Goui.TextNode.#ctor(System.String)
  - Goui.TextNode.Text
  - Goui.TextNode.WriteOuterHtml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: TextNode
  nameWithType: TextNode
  fullName: Goui.TextNode
  type: Class
  source:
    remote:
      path: Goui/TextNode.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: TextNode
    path: ../../Goui/TextNode.cs
    startLine: 4
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: 'public class TextNode : Node, INotifyPropertyChanged'
    content.vb: >-
      Public Class TextNode

          Inherits Node

          Implements INotifyPropertyChanged
  inheritance:
  - System.Object
  - Goui.EventTarget
  - Goui.Node
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - Goui.Node.Children
  - Goui.Node.FirstChild
  - Goui.Node.GetElementById(System.String)
  - Goui.Node.AppendChild(Goui.Node)
  - Goui.Node.InsertBefore(Goui.Node,Goui.Node)
  - Goui.Node.RemoveChild(Goui.Node)
  - Goui.Node.OnChildInsertedBefore(Goui.Node,Goui.Node)
  - Goui.Node.OnChildRemoved(Goui.Node)
  - Goui.Node.ReplaceAll(Goui.Node)
  - Goui.Node.SaveStateMessageIfNeeded(Goui.Message)
  - Goui.Node.TriggerEventFromMessage(Goui.Message)
  - Goui.Node.OuterHtml
  - Goui.EventTarget.Id
  - Goui.EventTarget.TagName
  - Goui.EventTarget.PropertyChanged
  - Goui.EventTarget.MessageSent
  - Goui.EventTarget.StateMessages
  - Goui.EventTarget.ToString
  - Goui.EventTarget.AddEventListener(System.String,Goui.TargetEventHandler)
  - Goui.EventTarget.RemoveEventListener(System.String,Goui.TargetEventHandler)
  - Goui.EventTarget.SetProperty``1({T}@,{T},System.String,System.String)
  - Goui.EventTarget.OnPropertyChanged(System.String)
  - Goui.EventTarget.IdPrefix
  - Goui.EventTarget.Send(Goui.Message)
  - Goui.EventTarget.Call(System.String,System.Object[])
  - Goui.EventTarget.SendSet(System.String,System.Object)
  - Goui.EventTarget.Receive(Goui.Message)
  - Goui.EventTarget.AddStateMessage(Goui.Message)
  - Goui.EventTarget.UpdateStateMessages(System.Action{System.Collections.Generic.List{Goui.Message}})
  - Goui.EventTarget.TriggerEvent(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Goui.TextNode.Text
  commentId: P:Goui.TextNode.Text
  id: Text
  parent: Goui.TextNode
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: TextNode.Text
  fullName: Goui.TextNode.Text
  type: Property
  source:
    remote:
      path: Goui/TextNode.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: Text
    path: ../../Goui/TextNode.cs
    startLine: 7
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public override string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides Property Text As String
  overridden: Goui.Node.Text
  overload: Goui.TextNode.Text*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Goui.TextNode.#ctor
  commentId: M:Goui.TextNode.#ctor
  id: '#ctor'
  parent: Goui.TextNode
  langs:
  - csharp
  - vb
  name: TextNode()
  nameWithType: TextNode.TextNode()
  fullName: Goui.TextNode.TextNode()
  type: Constructor
  source:
    remote:
      path: Goui/TextNode.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: .ctor
    path: ../../Goui/TextNode.cs
    startLine: 12
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public TextNode()
    content.vb: Public Sub New
  overload: Goui.TextNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Goui.TextNode.#ctor(System.String)
  commentId: M:Goui.TextNode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Goui.TextNode
  langs:
  - csharp
  - vb
  name: TextNode(String)
  nameWithType: TextNode.TextNode(String)
  fullName: Goui.TextNode.TextNode(System.String)
  type: Constructor
  source:
    remote:
      path: Goui/TextNode.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: .ctor
    path: ../../Goui/TextNode.cs
    startLine: 17
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public TextNode(string text)
    parameters:
    - id: text
      type: System.String
    content.vb: Public Sub New(text As String)
  overload: Goui.TextNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Goui.TextNode.WriteOuterHtml(System.Xml.XmlWriter)
  commentId: M:Goui.TextNode.WriteOuterHtml(System.Xml.XmlWriter)
  id: WriteOuterHtml(System.Xml.XmlWriter)
  parent: Goui.TextNode
  langs:
  - csharp
  - vb
  name: WriteOuterHtml(XmlWriter)
  nameWithType: TextNode.WriteOuterHtml(XmlWriter)
  fullName: Goui.TextNode.WriteOuterHtml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Goui/TextNode.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: WriteOuterHtml
    path: ../../Goui/TextNode.cs
    startLine: 25
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public override void WriteOuterHtml(XmlWriter w)
    parameters:
    - id: w
      type: System.Xml.XmlWriter
    content.vb: Public Overrides Sub WriteOuterHtml(w As XmlWriter)
  overridden: Goui.Node.WriteOuterHtml(System.Xml.XmlWriter)
  overload: Goui.TextNode.WriteOuterHtml*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Goui
  commentId: N:Goui
  name: Goui
  nameWithType: Goui
  fullName: Goui
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Goui.EventTarget
  commentId: T:Goui.EventTarget
  parent: Goui
  name: EventTarget
  nameWithType: EventTarget
  fullName: Goui.EventTarget
- uid: Goui.Node
  commentId: T:Goui.Node
  parent: Goui
  name: Node
  nameWithType: Node
  fullName: Goui.Node
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: Goui.Node.Children
  commentId: P:Goui.Node.Children
  parent: Goui.Node
  name: Children
  nameWithType: Node.Children
  fullName: Goui.Node.Children
- uid: Goui.Node.FirstChild
  commentId: P:Goui.Node.FirstChild
  parent: Goui.Node
  name: FirstChild
  nameWithType: Node.FirstChild
  fullName: Goui.Node.FirstChild
- uid: Goui.Node.GetElementById(System.String)
  commentId: M:Goui.Node.GetElementById(System.String)
  parent: Goui.Node
  isExternal: true
  name: GetElementById(String)
  nameWithType: Node.GetElementById(String)
  fullName: Goui.Node.GetElementById(System.String)
  spec.csharp:
  - uid: Goui.Node.GetElementById(System.String)
    name: GetElementById
    nameWithType: Node.GetElementById
    fullName: Goui.Node.GetElementById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.Node.GetElementById(System.String)
    name: GetElementById
    nameWithType: Node.GetElementById
    fullName: Goui.Node.GetElementById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.Node.AppendChild(Goui.Node)
  commentId: M:Goui.Node.AppendChild(Goui.Node)
  parent: Goui.Node
  name: AppendChild(Node)
  nameWithType: Node.AppendChild(Node)
  fullName: Goui.Node.AppendChild(Goui.Node)
  spec.csharp:
  - uid: Goui.Node.AppendChild(Goui.Node)
    name: AppendChild
    nameWithType: Node.AppendChild
    fullName: Goui.Node.AppendChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.Node.AppendChild(Goui.Node)
    name: AppendChild
    nameWithType: Node.AppendChild
    fullName: Goui.Node.AppendChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.Node.InsertBefore(Goui.Node,Goui.Node)
  commentId: M:Goui.Node.InsertBefore(Goui.Node,Goui.Node)
  parent: Goui.Node
  name: InsertBefore(Node, Node)
  nameWithType: Node.InsertBefore(Node, Node)
  fullName: Goui.Node.InsertBefore(Goui.Node, Goui.Node)
  spec.csharp:
  - uid: Goui.Node.InsertBefore(Goui.Node,Goui.Node)
    name: InsertBefore
    nameWithType: Node.InsertBefore
    fullName: Goui.Node.InsertBefore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.Node.InsertBefore(Goui.Node,Goui.Node)
    name: InsertBefore
    nameWithType: Node.InsertBefore
    fullName: Goui.Node.InsertBefore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.Node.RemoveChild(Goui.Node)
  commentId: M:Goui.Node.RemoveChild(Goui.Node)
  parent: Goui.Node
  name: RemoveChild(Node)
  nameWithType: Node.RemoveChild(Node)
  fullName: Goui.Node.RemoveChild(Goui.Node)
  spec.csharp:
  - uid: Goui.Node.RemoveChild(Goui.Node)
    name: RemoveChild
    nameWithType: Node.RemoveChild
    fullName: Goui.Node.RemoveChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.Node.RemoveChild(Goui.Node)
    name: RemoveChild
    nameWithType: Node.RemoveChild
    fullName: Goui.Node.RemoveChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.Node.OnChildInsertedBefore(Goui.Node,Goui.Node)
  commentId: M:Goui.Node.OnChildInsertedBefore(Goui.Node,Goui.Node)
  parent: Goui.Node
  name: OnChildInsertedBefore(Node, Node)
  nameWithType: Node.OnChildInsertedBefore(Node, Node)
  fullName: Goui.Node.OnChildInsertedBefore(Goui.Node, Goui.Node)
  spec.csharp:
  - uid: Goui.Node.OnChildInsertedBefore(Goui.Node,Goui.Node)
    name: OnChildInsertedBefore
    nameWithType: Node.OnChildInsertedBefore
    fullName: Goui.Node.OnChildInsertedBefore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.Node.OnChildInsertedBefore(Goui.Node,Goui.Node)
    name: OnChildInsertedBefore
    nameWithType: Node.OnChildInsertedBefore
    fullName: Goui.Node.OnChildInsertedBefore
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.Node.OnChildRemoved(Goui.Node)
  commentId: M:Goui.Node.OnChildRemoved(Goui.Node)
  parent: Goui.Node
  name: OnChildRemoved(Node)
  nameWithType: Node.OnChildRemoved(Node)
  fullName: Goui.Node.OnChildRemoved(Goui.Node)
  spec.csharp:
  - uid: Goui.Node.OnChildRemoved(Goui.Node)
    name: OnChildRemoved
    nameWithType: Node.OnChildRemoved
    fullName: Goui.Node.OnChildRemoved
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.Node.OnChildRemoved(Goui.Node)
    name: OnChildRemoved
    nameWithType: Node.OnChildRemoved
    fullName: Goui.Node.OnChildRemoved
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.Node.ReplaceAll(Goui.Node)
  commentId: M:Goui.Node.ReplaceAll(Goui.Node)
  parent: Goui.Node
  name: ReplaceAll(Node)
  nameWithType: Node.ReplaceAll(Node)
  fullName: Goui.Node.ReplaceAll(Goui.Node)
  spec.csharp:
  - uid: Goui.Node.ReplaceAll(Goui.Node)
    name: ReplaceAll
    nameWithType: Node.ReplaceAll
    fullName: Goui.Node.ReplaceAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.Node.ReplaceAll(Goui.Node)
    name: ReplaceAll
    nameWithType: Node.ReplaceAll
    fullName: Goui.Node.ReplaceAll
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Node
    name: Node
    nameWithType: Node
    fullName: Goui.Node
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.Node.SaveStateMessageIfNeeded(Goui.Message)
  commentId: M:Goui.Node.SaveStateMessageIfNeeded(Goui.Message)
  parent: Goui.Node
  name: SaveStateMessageIfNeeded(Message)
  nameWithType: Node.SaveStateMessageIfNeeded(Message)
  fullName: Goui.Node.SaveStateMessageIfNeeded(Goui.Message)
  spec.csharp:
  - uid: Goui.Node.SaveStateMessageIfNeeded(Goui.Message)
    name: SaveStateMessageIfNeeded
    nameWithType: Node.SaveStateMessageIfNeeded
    fullName: Goui.Node.SaveStateMessageIfNeeded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.Node.SaveStateMessageIfNeeded(Goui.Message)
    name: SaveStateMessageIfNeeded
    nameWithType: Node.SaveStateMessageIfNeeded
    fullName: Goui.Node.SaveStateMessageIfNeeded
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.Node.TriggerEventFromMessage(Goui.Message)
  commentId: M:Goui.Node.TriggerEventFromMessage(Goui.Message)
  parent: Goui.Node
  name: TriggerEventFromMessage(Message)
  nameWithType: Node.TriggerEventFromMessage(Message)
  fullName: Goui.Node.TriggerEventFromMessage(Goui.Message)
  spec.csharp:
  - uid: Goui.Node.TriggerEventFromMessage(Goui.Message)
    name: TriggerEventFromMessage
    nameWithType: Node.TriggerEventFromMessage
    fullName: Goui.Node.TriggerEventFromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.Node.TriggerEventFromMessage(Goui.Message)
    name: TriggerEventFromMessage
    nameWithType: Node.TriggerEventFromMessage
    fullName: Goui.Node.TriggerEventFromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.Node.OuterHtml
  commentId: P:Goui.Node.OuterHtml
  parent: Goui.Node
  name: OuterHtml
  nameWithType: Node.OuterHtml
  fullName: Goui.Node.OuterHtml
- uid: Goui.EventTarget.Id
  commentId: P:Goui.EventTarget.Id
  parent: Goui.EventTarget
  name: Id
  nameWithType: EventTarget.Id
  fullName: Goui.EventTarget.Id
- uid: Goui.EventTarget.TagName
  commentId: P:Goui.EventTarget.TagName
  parent: Goui.EventTarget
  name: TagName
  nameWithType: EventTarget.TagName
  fullName: Goui.EventTarget.TagName
- uid: Goui.EventTarget.PropertyChanged
  commentId: E:Goui.EventTarget.PropertyChanged
  parent: Goui.EventTarget
  name: PropertyChanged
  nameWithType: EventTarget.PropertyChanged
  fullName: Goui.EventTarget.PropertyChanged
- uid: Goui.EventTarget.MessageSent
  commentId: E:Goui.EventTarget.MessageSent
  parent: Goui.EventTarget
  name: MessageSent
  nameWithType: EventTarget.MessageSent
  fullName: Goui.EventTarget.MessageSent
- uid: Goui.EventTarget.StateMessages
  commentId: P:Goui.EventTarget.StateMessages
  parent: Goui.EventTarget
  name: StateMessages
  nameWithType: EventTarget.StateMessages
  fullName: Goui.EventTarget.StateMessages
- uid: Goui.EventTarget.ToString
  commentId: M:Goui.EventTarget.ToString
  parent: Goui.EventTarget
  name: ToString()
  nameWithType: EventTarget.ToString()
  fullName: Goui.EventTarget.ToString()
  spec.csharp:
  - uid: Goui.EventTarget.ToString
    name: ToString
    nameWithType: EventTarget.ToString
    fullName: Goui.EventTarget.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.EventTarget.ToString
    name: ToString
    nameWithType: EventTarget.ToString
    fullName: Goui.EventTarget.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.EventTarget.AddEventListener(System.String,Goui.TargetEventHandler)
  commentId: M:Goui.EventTarget.AddEventListener(System.String,Goui.TargetEventHandler)
  parent: Goui.EventTarget
  isExternal: true
  name: AddEventListener(String, TargetEventHandler)
  nameWithType: EventTarget.AddEventListener(String, TargetEventHandler)
  fullName: Goui.EventTarget.AddEventListener(System.String, Goui.TargetEventHandler)
  spec.csharp:
  - uid: Goui.EventTarget.AddEventListener(System.String,Goui.TargetEventHandler)
    name: AddEventListener
    nameWithType: EventTarget.AddEventListener
    fullName: Goui.EventTarget.AddEventListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Goui.TargetEventHandler
    name: TargetEventHandler
    nameWithType: TargetEventHandler
    fullName: Goui.TargetEventHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.EventTarget.AddEventListener(System.String,Goui.TargetEventHandler)
    name: AddEventListener
    nameWithType: EventTarget.AddEventListener
    fullName: Goui.EventTarget.AddEventListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Goui.TargetEventHandler
    name: TargetEventHandler
    nameWithType: TargetEventHandler
    fullName: Goui.TargetEventHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.EventTarget.RemoveEventListener(System.String,Goui.TargetEventHandler)
  commentId: M:Goui.EventTarget.RemoveEventListener(System.String,Goui.TargetEventHandler)
  parent: Goui.EventTarget
  isExternal: true
  name: RemoveEventListener(String, TargetEventHandler)
  nameWithType: EventTarget.RemoveEventListener(String, TargetEventHandler)
  fullName: Goui.EventTarget.RemoveEventListener(System.String, Goui.TargetEventHandler)
  spec.csharp:
  - uid: Goui.EventTarget.RemoveEventListener(System.String,Goui.TargetEventHandler)
    name: RemoveEventListener
    nameWithType: EventTarget.RemoveEventListener
    fullName: Goui.EventTarget.RemoveEventListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Goui.TargetEventHandler
    name: TargetEventHandler
    nameWithType: TargetEventHandler
    fullName: Goui.TargetEventHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.EventTarget.RemoveEventListener(System.String,Goui.TargetEventHandler)
    name: RemoveEventListener
    nameWithType: EventTarget.RemoveEventListener
    fullName: Goui.EventTarget.RemoveEventListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Goui.TargetEventHandler
    name: TargetEventHandler
    nameWithType: TargetEventHandler
    fullName: Goui.TargetEventHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.EventTarget.SetProperty``1({T}@,{T},System.String,System.String)
  commentId: M:Goui.EventTarget.SetProperty``1(``0@,``0,System.String,System.String)
  parent: Goui.EventTarget
  definition: Goui.EventTarget.SetProperty``1(``0@,``0,System.String,System.String)
  name: SetProperty<T>(T, T, String, String)
  nameWithType: EventTarget.SetProperty<T>(T, T, String, String)
  fullName: Goui.EventTarget.SetProperty<T>(T, T, System.String, System.String)
  nameWithType.vb: EventTarget.SetProperty(Of T)(T, T, String, String)
  fullName.vb: Goui.EventTarget.SetProperty(Of T)(T, T, System.String, System.String)
  name.vb: SetProperty(Of T)(T, T, String, String)
  spec.csharp:
  - uid: Goui.EventTarget.SetProperty``1(``0@,``0,System.String,System.String)
    name: SetProperty<T>
    nameWithType: EventTarget.SetProperty<T>
    fullName: Goui.EventTarget.SetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.EventTarget.SetProperty``1(``0@,``0,System.String,System.String)
    name: SetProperty(Of T)
    nameWithType: EventTarget.SetProperty(Of T)
    fullName: Goui.EventTarget.SetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.EventTarget.OnPropertyChanged(System.String)
  commentId: M:Goui.EventTarget.OnPropertyChanged(System.String)
  parent: Goui.EventTarget
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: EventTarget.OnPropertyChanged(String)
  fullName: Goui.EventTarget.OnPropertyChanged(System.String)
  spec.csharp:
  - uid: Goui.EventTarget.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: EventTarget.OnPropertyChanged
    fullName: Goui.EventTarget.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.EventTarget.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: EventTarget.OnPropertyChanged
    fullName: Goui.EventTarget.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.EventTarget.IdPrefix
  commentId: F:Goui.EventTarget.IdPrefix
  parent: Goui.EventTarget
  name: IdPrefix
  nameWithType: EventTarget.IdPrefix
  fullName: Goui.EventTarget.IdPrefix
- uid: Goui.EventTarget.Send(Goui.Message)
  commentId: M:Goui.EventTarget.Send(Goui.Message)
  parent: Goui.EventTarget
  name: Send(Message)
  nameWithType: EventTarget.Send(Message)
  fullName: Goui.EventTarget.Send(Goui.Message)
  spec.csharp:
  - uid: Goui.EventTarget.Send(Goui.Message)
    name: Send
    nameWithType: EventTarget.Send
    fullName: Goui.EventTarget.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.EventTarget.Send(Goui.Message)
    name: Send
    nameWithType: EventTarget.Send
    fullName: Goui.EventTarget.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.EventTarget.Call(System.String,System.Object[])
  commentId: M:Goui.EventTarget.Call(System.String,System.Object[])
  parent: Goui.EventTarget
  isExternal: true
  name: Call(String, Object[])
  nameWithType: EventTarget.Call(String, Object[])
  fullName: Goui.EventTarget.Call(System.String, System.Object[])
  nameWithType.vb: EventTarget.Call(String, Object())
  fullName.vb: Goui.EventTarget.Call(System.String, System.Object())
  name.vb: Call(String, Object())
  spec.csharp:
  - uid: Goui.EventTarget.Call(System.String,System.Object[])
    name: Call
    nameWithType: EventTarget.Call
    fullName: Goui.EventTarget.Call
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.EventTarget.Call(System.String,System.Object[])
    name: Call
    nameWithType: EventTarget.Call
    fullName: Goui.EventTarget.Call
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.EventTarget.SendSet(System.String,System.Object)
  commentId: M:Goui.EventTarget.SendSet(System.String,System.Object)
  parent: Goui.EventTarget
  isExternal: true
  name: SendSet(String, Object)
  nameWithType: EventTarget.SendSet(String, Object)
  fullName: Goui.EventTarget.SendSet(System.String, System.Object)
  spec.csharp:
  - uid: Goui.EventTarget.SendSet(System.String,System.Object)
    name: SendSet
    nameWithType: EventTarget.SendSet
    fullName: Goui.EventTarget.SendSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.EventTarget.SendSet(System.String,System.Object)
    name: SendSet
    nameWithType: EventTarget.SendSet
    fullName: Goui.EventTarget.SendSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.EventTarget.Receive(Goui.Message)
  commentId: M:Goui.EventTarget.Receive(Goui.Message)
  parent: Goui.EventTarget
  name: Receive(Message)
  nameWithType: EventTarget.Receive(Message)
  fullName: Goui.EventTarget.Receive(Goui.Message)
  spec.csharp:
  - uid: Goui.EventTarget.Receive(Goui.Message)
    name: Receive
    nameWithType: EventTarget.Receive
    fullName: Goui.EventTarget.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.EventTarget.Receive(Goui.Message)
    name: Receive
    nameWithType: EventTarget.Receive
    fullName: Goui.EventTarget.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.EventTarget.AddStateMessage(Goui.Message)
  commentId: M:Goui.EventTarget.AddStateMessage(Goui.Message)
  parent: Goui.EventTarget
  name: AddStateMessage(Message)
  nameWithType: EventTarget.AddStateMessage(Message)
  fullName: Goui.EventTarget.AddStateMessage(Goui.Message)
  spec.csharp:
  - uid: Goui.EventTarget.AddStateMessage(Goui.Message)
    name: AddStateMessage
    nameWithType: EventTarget.AddStateMessage
    fullName: Goui.EventTarget.AddStateMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.EventTarget.AddStateMessage(Goui.Message)
    name: AddStateMessage
    nameWithType: EventTarget.AddStateMessage
    fullName: Goui.EventTarget.AddStateMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.EventTarget.UpdateStateMessages(System.Action{System.Collections.Generic.List{Goui.Message}})
  commentId: M:Goui.EventTarget.UpdateStateMessages(System.Action{System.Collections.Generic.List{Goui.Message}})
  parent: Goui.EventTarget
  isExternal: true
  name: UpdateStateMessages(Action<List<Message>>)
  nameWithType: EventTarget.UpdateStateMessages(Action<List<Message>>)
  fullName: Goui.EventTarget.UpdateStateMessages(System.Action<System.Collections.Generic.List<Goui.Message>>)
  nameWithType.vb: EventTarget.UpdateStateMessages(Action(Of List(Of Message)))
  fullName.vb: Goui.EventTarget.UpdateStateMessages(System.Action(Of System.Collections.Generic.List(Of Goui.Message)))
  name.vb: UpdateStateMessages(Action(Of List(Of Message)))
  spec.csharp:
  - uid: Goui.EventTarget.UpdateStateMessages(System.Action{System.Collections.Generic.List{Goui.Message}})
    name: UpdateStateMessages
    nameWithType: EventTarget.UpdateStateMessages
    fullName: Goui.EventTarget.UpdateStateMessages
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.EventTarget.UpdateStateMessages(System.Action{System.Collections.Generic.List{Goui.Message}})
    name: UpdateStateMessages
    nameWithType: EventTarget.UpdateStateMessages
    fullName: Goui.EventTarget.UpdateStateMessages
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.EventTarget.TriggerEvent(System.String)
  commentId: M:Goui.EventTarget.TriggerEvent(System.String)
  parent: Goui.EventTarget
  isExternal: true
  name: TriggerEvent(String)
  nameWithType: EventTarget.TriggerEvent(String)
  fullName: Goui.EventTarget.TriggerEvent(System.String)
  spec.csharp:
  - uid: Goui.EventTarget.TriggerEvent(System.String)
    name: TriggerEvent
    nameWithType: EventTarget.TriggerEvent
    fullName: Goui.EventTarget.TriggerEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.EventTarget.TriggerEvent(System.String)
    name: TriggerEvent
    nameWithType: EventTarget.TriggerEvent
    fullName: Goui.EventTarget.TriggerEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: Goui.EventTarget.SetProperty``1(``0@,``0,System.String,System.String)
  commentId: M:Goui.EventTarget.SetProperty``1(``0@,``0,System.String,System.String)
  isExternal: true
  name: SetProperty<T>(T, T, String, String)
  nameWithType: EventTarget.SetProperty<T>(T, T, String, String)
  fullName: Goui.EventTarget.SetProperty<T>(T, T, System.String, System.String)
  nameWithType.vb: EventTarget.SetProperty(Of T)(T, T, String, String)
  fullName.vb: Goui.EventTarget.SetProperty(Of T)(T, T, System.String, System.String)
  name.vb: SetProperty(Of T)(T, T, String, String)
  spec.csharp:
  - uid: Goui.EventTarget.SetProperty``1(``0@,``0,System.String,System.String)
    name: SetProperty<T>
    nameWithType: EventTarget.SetProperty<T>
    fullName: Goui.EventTarget.SetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.EventTarget.SetProperty``1(``0@,``0,System.String,System.String)
    name: SetProperty(Of T)
    nameWithType: EventTarget.SetProperty(Of T)
    fullName: Goui.EventTarget.SetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.Node.Text
  commentId: P:Goui.Node.Text
  parent: Goui.Node
  name: Text
  nameWithType: Node.Text
  fullName: Goui.Node.Text
- uid: Goui.TextNode.Text*
  commentId: Overload:Goui.TextNode.Text
  name: Text
  nameWithType: TextNode.Text
  fullName: Goui.TextNode.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Goui.TextNode.#ctor*
  commentId: Overload:Goui.TextNode.#ctor
  name: TextNode
  nameWithType: TextNode.TextNode
  fullName: Goui.TextNode.TextNode
- uid: Goui.Node.WriteOuterHtml(System.Xml.XmlWriter)
  commentId: M:Goui.Node.WriteOuterHtml(System.Xml.XmlWriter)
  parent: Goui.Node
  isExternal: true
  name: WriteOuterHtml(XmlWriter)
  nameWithType: Node.WriteOuterHtml(XmlWriter)
  fullName: Goui.Node.WriteOuterHtml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: Goui.Node.WriteOuterHtml(System.Xml.XmlWriter)
    name: WriteOuterHtml
    nameWithType: Node.WriteOuterHtml
    fullName: Goui.Node.WriteOuterHtml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.Node.WriteOuterHtml(System.Xml.XmlWriter)
    name: WriteOuterHtml
    nameWithType: Node.WriteOuterHtml
    fullName: Goui.Node.WriteOuterHtml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.TextNode.WriteOuterHtml*
  commentId: Overload:Goui.TextNode.WriteOuterHtml
  name: WriteOuterHtml
  nameWithType: TextNode.WriteOuterHtml
  fullName: Goui.TextNode.WriteOuterHtml
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml

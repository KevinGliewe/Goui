### YamlMime:ManagedReference
items:
- uid: Goui.UI
  commentId: T:Goui.UI
  id: UI
  parent: Goui
  children:
  - Goui.UI.BodyFooterHtml
  - Goui.UI.BodyHeaderHtml
  - Goui.UI.CanConfigure
  - Goui.UI.ClientJsBytes
  - Goui.UI.ClientJsEtag
  - Goui.UI.Config
  - Goui.UI.GetUrl(System.String)
  - Goui.UI.HeadHtml
  - Goui.UI.Host
  - Goui.UI.MaxFps
  - Goui.UI.Port
  - Goui.UI.Present(System.String,System.Object)
  - Goui.UI.Publish(System.String,Goui.Html.Element)
  - Goui.UI.Publish(System.String,System.Func{Goui.Html.Element},System.Boolean)
  - Goui.UI.PublishCustomResponse(System.String,System.Action{System.Net.HttpListenerContext,System.Threading.CancellationToken})
  - Goui.UI.PublishFile(System.String)
  - Goui.UI.PublishFile(System.String,System.Byte[],System.String)
  - Goui.UI.PublishFile(System.String,System.Byte[],System.String,System.String)
  - Goui.UI.PublishFile(System.String,System.String,System.String)
  - Goui.UI.PublishJson(System.String,System.Func{System.Object})
  - Goui.UI.PublishJson(System.String,System.Object)
  - Goui.UI.ReceiveWebAssemblySessionMessageJson(System.String,System.String)
  - Goui.UI.RenderTemplate(System.IO.TextWriter,System.String,System.String,System.String)
  - Goui.UI.RenderTemplate(System.String,System.String,System.String)
  - Goui.UI.ServerEnabled
  - Goui.UI.StartWebAssemblySession(System.String,System.String,System.String)
  - Goui.UI.Styles
  - Goui.UI.TryGetFileContentAtPath(System.String,Goui.UI.FileContent@)
  - Goui.UI.WaitUntilStarted
  langs:
  - csharp
  - vb
  name: UI
  nameWithType: UI
  fullName: Goui.UI
  type: Class
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: UI
    path: ../../Goui/UI.cs
    startLine: 13
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static class UI
    content.vb: Public Module UI
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Goui.UI.MaxFps
  commentId: F:Goui.UI.MaxFps
  id: MaxFps
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: MaxFps
  nameWithType: UI.MaxFps
  fullName: Goui.UI.MaxFps
  type: Field
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: MaxFps
    path: ../../Goui/UI.cs
    startLine: 15
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public const int MaxFps = 30
    return:
      type: System.Int32
    content.vb: Public Const MaxFps As Integer = 30
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Goui.UI.ClientJsBytes
  commentId: P:Goui.UI.ClientJsBytes
  id: ClientJsBytes
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: ClientJsBytes
  nameWithType: UI.ClientJsBytes
  fullName: Goui.UI.ClientJsBytes
  type: Property
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: ClientJsBytes
    path: ../../Goui/UI.cs
    startLine: 27
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static byte[] ClientJsBytes { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public Shared ReadOnly Property ClientJsBytes As Byte()
  overload: Goui.UI.ClientJsBytes*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Goui.UI.ClientJsEtag
  commentId: P:Goui.UI.ClientJsEtag
  id: ClientJsEtag
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: ClientJsEtag
  nameWithType: UI.ClientJsEtag
  fullName: Goui.UI.ClientJsEtag
  type: Property
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: ClientJsEtag
    path: ../../Goui/UI.cs
    startLine: 28
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static string ClientJsEtag { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property ClientJsEtag As String
  overload: Goui.UI.ClientJsEtag*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Goui.UI.HeadHtml
  commentId: P:Goui.UI.HeadHtml
  id: HeadHtml
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: HeadHtml
  nameWithType: UI.HeadHtml
  fullName: Goui.UI.HeadHtml
  type: Property
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: HeadHtml
    path: ../../Goui/UI.cs
    startLine: 30
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static string HeadHtml { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared Property HeadHtml As String
  overload: Goui.UI.HeadHtml*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.BodyHeaderHtml
  commentId: P:Goui.UI.BodyHeaderHtml
  id: BodyHeaderHtml
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: BodyHeaderHtml
  nameWithType: UI.BodyHeaderHtml
  fullName: Goui.UI.BodyHeaderHtml
  type: Property
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: BodyHeaderHtml
    path: ../../Goui/UI.cs
    startLine: 31
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static string BodyHeaderHtml { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared Property BodyHeaderHtml As String
  overload: Goui.UI.BodyHeaderHtml*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.BodyFooterHtml
  commentId: P:Goui.UI.BodyFooterHtml
  id: BodyFooterHtml
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: BodyFooterHtml
  nameWithType: UI.BodyFooterHtml
  fullName: Goui.UI.BodyFooterHtml
  type: Property
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: BodyFooterHtml
    path: ../../Goui/UI.cs
    startLine: 32
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static string BodyFooterHtml { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared Property BodyFooterHtml As String
  overload: Goui.UI.BodyFooterHtml*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.CanConfigure
  commentId: P:Goui.UI.CanConfigure
  id: CanConfigure
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: CanConfigure
  nameWithType: UI.CanConfigure
  fullName: Goui.UI.CanConfigure
  type: Property
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: CanConfigure
    path: ../../Goui/UI.cs
    startLine: 34
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static bool CanConfigure { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property CanConfigure As Boolean
  overload: Goui.UI.CanConfigure*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Goui.UI.Config
  commentId: P:Goui.UI.Config
  id: Config
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: UI.Config
  fullName: Goui.UI.Config
  type: Property
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: Config
    path: ../../Goui/UI.cs
    startLine: 37
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static UIConfig Config { get; set; }
    parameters: []
    return:
      type: Goui.UIConfig
    content.vb: Public Shared Property Config As UIConfig
  overload: Goui.UI.Config*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.Host
  commentId: P:Goui.UI.Host
  id: Host
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: UI.Host
  fullName: Goui.UI.Host
  type: Property
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: Host
    path: ../../Goui/UI.cs
    startLine: 49
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static string Host { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared Property Host As String
  overload: Goui.UI.Host*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.Port
  commentId: P:Goui.UI.Port
  id: Port
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: UI.Port
  fullName: Goui.UI.Port
  type: Property
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: Port
    path: ../../Goui/UI.cs
    startLine: 59
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static int Port { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared Property Port As Integer
  overload: Goui.UI.Port*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.ServerEnabled
  commentId: P:Goui.UI.ServerEnabled
  id: ServerEnabled
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: ServerEnabled
  nameWithType: UI.ServerEnabled
  fullName: Goui.UI.ServerEnabled
  type: Property
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: ServerEnabled
    path: ../../Goui/UI.cs
    startLine: 69
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static bool ServerEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property ServerEnabled As Boolean
  overload: Goui.UI.ServerEnabled*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.Publish(System.String,System.Func{Goui.Html.Element},System.Boolean)
  commentId: M:Goui.UI.Publish(System.String,System.Func{Goui.Html.Element},System.Boolean)
  id: Publish(System.String,System.Func{Goui.Html.Element},System.Boolean)
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: Publish(String, Func<Element>, Boolean)
  nameWithType: UI.Publish(String, Func<Element>, Boolean)
  fullName: Goui.UI.Publish(System.String, System.Func<Goui.Html.Element>, System.Boolean)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: Publish
    path: ../../Goui/UI.cs
    startLine: 115
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static void Publish(string path, Func<Element> elementCtor, bool disposeElementWhenDone = true)
    parameters:
    - id: path
      type: System.String
    - id: elementCtor
      type: System.Func{Goui.Html.Element}
    - id: disposeElementWhenDone
      type: System.Boolean
    content.vb: Public Shared Sub Publish(path As String, elementCtor As Func(Of Element), disposeElementWhenDone As Boolean = True)
  overload: Goui.UI.Publish*
  nameWithType.vb: UI.Publish(String, Func(Of Element), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Goui.UI.Publish(System.String, System.Func(Of Goui.Html.Element), System.Boolean)
  name.vb: Publish(String, Func(Of Element), Boolean)
- uid: Goui.UI.Publish(System.String,Goui.Html.Element)
  commentId: M:Goui.UI.Publish(System.String,Goui.Html.Element)
  id: Publish(System.String,Goui.Html.Element)
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: Publish(String, Element)
  nameWithType: UI.Publish(String, Element)
  fullName: Goui.UI.Publish(System.String, Goui.Html.Element)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: Publish
    path: ../../Goui/UI.cs
    startLine: 120
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static void Publish(string path, Element element)
    parameters:
    - id: path
      type: System.String
    - id: element
      type: Goui.Html.Element
    content.vb: Public Shared Sub Publish(path As String, element As Element)
  overload: Goui.UI.Publish*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.PublishFile(System.String)
  commentId: M:Goui.UI.PublishFile(System.String)
  id: PublishFile(System.String)
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: PublishFile(String)
  nameWithType: UI.PublishFile(String)
  fullName: Goui.UI.PublishFile(System.String)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: PublishFile
    path: ../../Goui/UI.cs
    startLine: 125
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static void PublishFile(string filePath)
    parameters:
    - id: filePath
      type: System.String
    content.vb: Public Shared Sub PublishFile(filePath As String)
  overload: Goui.UI.PublishFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.PublishFile(System.String,System.String,System.String)
  commentId: M:Goui.UI.PublishFile(System.String,System.String,System.String)
  id: PublishFile(System.String,System.String,System.String)
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: PublishFile(String, String, String)
  nameWithType: UI.PublishFile(String, String, String)
  fullName: Goui.UI.PublishFile(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: PublishFile
    path: ../../Goui/UI.cs
    startLine: 131
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static void PublishFile(string path, string filePath, string contentType = null)
    parameters:
    - id: path
      type: System.String
    - id: filePath
      type: System.String
    - id: contentType
      type: System.String
    content.vb: Public Shared Sub PublishFile(path As String, filePath As String, contentType As String = Nothing)
  overload: Goui.UI.PublishFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.PublishFile(System.String,System.Byte[],System.String)
  commentId: M:Goui.UI.PublishFile(System.String,System.Byte[],System.String)
  id: PublishFile(System.String,System.Byte[],System.String)
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: PublishFile(String, Byte[], String)
  nameWithType: UI.PublishFile(String, Byte[], String)
  fullName: Goui.UI.PublishFile(System.String, System.Byte[], System.String)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: PublishFile
    path: ../../Goui/UI.cs
    startLine: 141
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static void PublishFile(string path, byte[] data, string contentType)
    parameters:
    - id: path
      type: System.String
    - id: data
      type: System.Byte[]
    - id: contentType
      type: System.String
    content.vb: Public Shared Sub PublishFile(path As String, data As Byte(), contentType As String)
  overload: Goui.UI.PublishFile*
  nameWithType.vb: UI.PublishFile(String, Byte(), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Goui.UI.PublishFile(System.String, System.Byte(), System.String)
  name.vb: PublishFile(String, Byte(), String)
- uid: Goui.UI.PublishFile(System.String,System.Byte[],System.String,System.String)
  commentId: M:Goui.UI.PublishFile(System.String,System.Byte[],System.String,System.String)
  id: PublishFile(System.String,System.Byte[],System.String,System.String)
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: PublishFile(String, Byte[], String, String)
  nameWithType: UI.PublishFile(String, Byte[], String, String)
  fullName: Goui.UI.PublishFile(System.String, System.Byte[], System.String, System.String)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: PublishFile
    path: ../../Goui/UI.cs
    startLine: 147
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static void PublishFile(string path, byte[] data, string etag, string contentType)
    parameters:
    - id: path
      type: System.String
    - id: data
      type: System.Byte[]
    - id: etag
      type: System.String
    - id: contentType
      type: System.String
    content.vb: Public Shared Sub PublishFile(path As String, data As Byte(), etag As String, contentType As String)
  overload: Goui.UI.PublishFile*
  nameWithType.vb: UI.PublishFile(String, Byte(), String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Goui.UI.PublishFile(System.String, System.Byte(), System.String, System.String)
  name.vb: PublishFile(String, Byte(), String, String)
- uid: Goui.UI.TryGetFileContentAtPath(System.String,Goui.UI.FileContent@)
  commentId: M:Goui.UI.TryGetFileContentAtPath(System.String,Goui.UI.FileContent@)
  id: TryGetFileContentAtPath(System.String,Goui.UI.FileContent@)
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: TryGetFileContentAtPath(String, out UI.FileContent)
  nameWithType: UI.TryGetFileContentAtPath(String, out UI.FileContent)
  fullName: Goui.UI.TryGetFileContentAtPath(System.String, out Goui.UI.FileContent)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: TryGetFileContentAtPath
    path: ../../Goui/UI.cs
    startLine: 152
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static bool TryGetFileContentAtPath(string path, out UI.FileContent file)
    parameters:
    - id: path
      type: System.String
    - id: file
      type: Goui.UI.FileContent
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryGetFileContentAtPath(path As String, ByRef file As UI.FileContent) As Boolean
  overload: Goui.UI.TryGetFileContentAtPath*
  nameWithType.vb: UI.TryGetFileContentAtPath(String, ByRef UI.FileContent)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Goui.UI.TryGetFileContentAtPath(System.String, ByRef Goui.UI.FileContent)
  name.vb: TryGetFileContentAtPath(String, ByRef UI.FileContent)
- uid: Goui.UI.PublishJson(System.String,System.Func{System.Object})
  commentId: M:Goui.UI.PublishJson(System.String,System.Func{System.Object})
  id: PublishJson(System.String,System.Func{System.Object})
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: PublishJson(String, Func<Object>)
  nameWithType: UI.PublishJson(String, Func<Object>)
  fullName: Goui.UI.PublishJson(System.String, System.Func<System.Object>)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: PublishJson
    path: ../../Goui/UI.cs
    startLine: 180
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static void PublishJson(string path, Func<object> ctor)
    parameters:
    - id: path
      type: System.String
    - id: ctor
      type: System.Func{System.Object}
    content.vb: Public Shared Sub PublishJson(path As String, ctor As Func(Of Object))
  overload: Goui.UI.PublishJson*
  nameWithType.vb: UI.PublishJson(String, Func(Of Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Goui.UI.PublishJson(System.String, System.Func(Of System.Object))
  name.vb: PublishJson(String, Func(Of Object))
- uid: Goui.UI.PublishJson(System.String,System.Object)
  commentId: M:Goui.UI.PublishJson(System.String,System.Object)
  id: PublishJson(System.String,System.Object)
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: PublishJson(String, Object)
  nameWithType: UI.PublishJson(String, Object)
  fullName: Goui.UI.PublishJson(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: PublishJson
    path: ../../Goui/UI.cs
    startLine: 185
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static void PublishJson(string path, object value)
    parameters:
    - id: path
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Shared Sub PublishJson(path As String, value As Object)
  overload: Goui.UI.PublishJson*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.PublishCustomResponse(System.String,System.Action{System.Net.HttpListenerContext,System.Threading.CancellationToken})
  commentId: M:Goui.UI.PublishCustomResponse(System.String,System.Action{System.Net.HttpListenerContext,System.Threading.CancellationToken})
  id: PublishCustomResponse(System.String,System.Action{System.Net.HttpListenerContext,System.Threading.CancellationToken})
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: PublishCustomResponse(String, Action<HttpListenerContext, CancellationToken>)
  nameWithType: UI.PublishCustomResponse(String, Action<HttpListenerContext, CancellationToken>)
  fullName: Goui.UI.PublishCustomResponse(System.String, System.Action<System.Net.HttpListenerContext, System.Threading.CancellationToken>)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: PublishCustomResponse
    path: ../../Goui/UI.cs
    startLine: 192
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static void PublishCustomResponse(string path, Action<HttpListenerContext, CancellationToken> responder)
    parameters:
    - id: path
      type: System.String
    - id: responder
      type: System.Action{System.Net.HttpListenerContext,System.Threading.CancellationToken}
    content.vb: Public Shared Sub PublishCustomResponse(path As String, responder As Action(Of HttpListenerContext, CancellationToken))
  overload: Goui.UI.PublishCustomResponse*
  nameWithType.vb: UI.PublishCustomResponse(String, Action(Of HttpListenerContext, CancellationToken))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Goui.UI.PublishCustomResponse(System.String, System.Action(Of System.Net.HttpListenerContext, System.Threading.CancellationToken))
  name.vb: PublishCustomResponse(String, Action(Of HttpListenerContext, CancellationToken))
- uid: Goui.UI.Present(System.String,System.Object)
  commentId: M:Goui.UI.Present(System.String,System.Object)
  id: Present(System.String,System.Object)
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: Present(String, Object)
  nameWithType: UI.Present(String, Object)
  fullName: Goui.UI.Present(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: Present
    path: ../../Goui/UI.cs
    startLine: 202
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static void Present(string path, object presenter = null)
    parameters:
    - id: path
      type: System.String
    - id: presenter
      type: System.Object
    content.vb: Public Shared Sub Present(path As String, presenter As Object = Nothing)
  overload: Goui.UI.Present*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.GetUrl(System.String)
  commentId: M:Goui.UI.GetUrl(System.String)
  id: GetUrl(System.String)
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: GetUrl(String)
  nameWithType: UI.GetUrl(String)
  fullName: Goui.UI.GetUrl(System.String)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: GetUrl
    path: ../../Goui/UI.cs
    startLine: 210
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static string GetUrl(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetUrl(path As String) As String
  overload: Goui.UI.GetUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.WaitUntilStarted
  commentId: M:Goui.UI.WaitUntilStarted
  id: WaitUntilStarted
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: WaitUntilStarted()
  nameWithType: UI.WaitUntilStarted()
  fullName: Goui.UI.WaitUntilStarted()
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: WaitUntilStarted
    path: ../../Goui/UI.cs
    startLine: 217
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static void WaitUntilStarted()
    content.vb: Public Shared Sub WaitUntilStarted
  overload: Goui.UI.WaitUntilStarted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.RenderTemplate(System.String,System.String,System.String)
  commentId: M:Goui.UI.RenderTemplate(System.String,System.String,System.String)
  id: RenderTemplate(System.String,System.String,System.String)
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: RenderTemplate(String, String, String)
  nameWithType: UI.RenderTemplate(String, String, String)
  fullName: Goui.UI.RenderTemplate(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: RenderTemplate
    path: ../../Goui/UI.cs
    startLine: 404
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static string RenderTemplate(string webSocketPath, string title = "", string initialHtml = "")
    parameters:
    - id: webSocketPath
      type: System.String
    - id: title
      type: System.String
    - id: initialHtml
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function RenderTemplate(webSocketPath As String, title As String = "", initialHtml As String = "") As String
  overload: Goui.UI.RenderTemplate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.RenderTemplate(System.IO.TextWriter,System.String,System.String,System.String)
  commentId: M:Goui.UI.RenderTemplate(System.IO.TextWriter,System.String,System.String,System.String)
  id: RenderTemplate(System.IO.TextWriter,System.String,System.String,System.String)
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: RenderTemplate(TextWriter, String, String, String)
  nameWithType: UI.RenderTemplate(TextWriter, String, String, String)
  fullName: Goui.UI.RenderTemplate(System.IO.TextWriter, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: RenderTemplate
    path: ../../Goui/UI.cs
    startLine: 417
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static void RenderTemplate(TextWriter writer, string webSocketPath, string title, string initialHtml)
    parameters:
    - id: writer
      type: System.IO.TextWriter
    - id: webSocketPath
      type: System.String
    - id: title
      type: System.String
    - id: initialHtml
      type: System.String
    content.vb: Public Shared Sub RenderTemplate(writer As TextWriter, webSocketPath As String, title As String, initialHtml As String)
  overload: Goui.UI.RenderTemplate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.StartWebAssemblySession(System.String,System.String,System.String)
  commentId: M:Goui.UI.StartWebAssemblySession(System.String,System.String,System.String)
  id: StartWebAssemblySession(System.String,System.String,System.String)
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: StartWebAssemblySession(String, String, String)
  nameWithType: UI.StartWebAssemblySession(String, String, String)
  fullName: Goui.UI.StartWebAssemblySession(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: StartWebAssemblySession
    path: ../../Goui/UI.cs
    startLine: 646
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static void StartWebAssemblySession(string sessionId, string elementPath, string initialSize)
    parameters:
    - id: sessionId
      type: System.String
    - id: elementPath
      type: System.String
    - id: initialSize
      type: System.String
    content.vb: Public Shared Sub StartWebAssemblySession(sessionId As String, elementPath As String, initialSize As String)
  overload: Goui.UI.StartWebAssemblySession*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.ReceiveWebAssemblySessionMessageJson(System.String,System.String)
  commentId: M:Goui.UI.ReceiveWebAssemblySessionMessageJson(System.String,System.String)
  id: ReceiveWebAssemblySessionMessageJson(System.String,System.String)
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: ReceiveWebAssemblySessionMessageJson(String, String)
  nameWithType: UI.ReceiveWebAssemblySessionMessageJson(String, String)
  fullName: Goui.UI.ReceiveWebAssemblySessionMessageJson(System.String, System.String)
  type: Method
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: ReceiveWebAssemblySessionMessageJson
    path: ../../Goui/UI.cs
    startLine: 673
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static void ReceiveWebAssemblySessionMessageJson(string sessionId, string json)
    parameters:
    - id: sessionId
      type: System.String
    - id: json
      type: System.String
    content.vb: Public Shared Sub ReceiveWebAssemblySessionMessageJson(sessionId As String, json As String)
  overload: Goui.UI.ReceiveWebAssemblySessionMessageJson*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Goui.UI.Styles
  commentId: P:Goui.UI.Styles
  id: Styles
  parent: Goui.UI
  langs:
  - csharp
  - vb
  name: Styles
  nameWithType: UI.Styles
  fullName: Goui.UI.Styles
  type: Property
  source:
    remote:
      path: Goui/UI.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: Styles
    path: ../../Goui/UI.cs
    startLine: 689
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public static UI.StyleSelectors Styles { get; }
    parameters: []
    return:
      type: Goui.UI.StyleSelectors
    content.vb: Public Shared ReadOnly Property Styles As UI.StyleSelectors
  overload: Goui.UI.Styles*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Goui
  commentId: N:Goui
  name: Goui
  nameWithType: Goui
  fullName: Goui
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Goui.UI.ClientJsBytes*
  commentId: Overload:Goui.UI.ClientJsBytes
  name: ClientJsBytes
  nameWithType: UI.ClientJsBytes
  fullName: Goui.UI.ClientJsBytes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Goui.UI.ClientJsEtag*
  commentId: Overload:Goui.UI.ClientJsEtag
  name: ClientJsEtag
  nameWithType: UI.ClientJsEtag
  fullName: Goui.UI.ClientJsEtag
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Goui.UI.HeadHtml*
  commentId: Overload:Goui.UI.HeadHtml
  name: HeadHtml
  nameWithType: UI.HeadHtml
  fullName: Goui.UI.HeadHtml
- uid: Goui.UI.BodyHeaderHtml*
  commentId: Overload:Goui.UI.BodyHeaderHtml
  name: BodyHeaderHtml
  nameWithType: UI.BodyHeaderHtml
  fullName: Goui.UI.BodyHeaderHtml
- uid: Goui.UI.BodyFooterHtml*
  commentId: Overload:Goui.UI.BodyFooterHtml
  name: BodyFooterHtml
  nameWithType: UI.BodyFooterHtml
  fullName: Goui.UI.BodyFooterHtml
- uid: Goui.UI.CanConfigure*
  commentId: Overload:Goui.UI.CanConfigure
  name: CanConfigure
  nameWithType: UI.CanConfigure
  fullName: Goui.UI.CanConfigure
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Goui.UI.Config*
  commentId: Overload:Goui.UI.Config
  name: Config
  nameWithType: UI.Config
  fullName: Goui.UI.Config
- uid: Goui.UIConfig
  commentId: T:Goui.UIConfig
  parent: Goui
  name: UIConfig
  nameWithType: UIConfig
  fullName: Goui.UIConfig
- uid: Goui.UI.Host*
  commentId: Overload:Goui.UI.Host
  name: Host
  nameWithType: UI.Host
  fullName: Goui.UI.Host
- uid: Goui.UI.Port*
  commentId: Overload:Goui.UI.Port
  name: Port
  nameWithType: UI.Port
  fullName: Goui.UI.Port
- uid: Goui.UI.ServerEnabled*
  commentId: Overload:Goui.UI.ServerEnabled
  name: ServerEnabled
  nameWithType: UI.ServerEnabled
  fullName: Goui.UI.ServerEnabled
- uid: Goui.UI.Publish*
  commentId: Overload:Goui.UI.Publish
  name: Publish
  nameWithType: UI.Publish
  fullName: Goui.UI.Publish
- uid: System.Func{Goui.Html.Element}
  commentId: T:System.Func{Goui.Html.Element}
  parent: System
  definition: System.Func`1
  name: Func<Element>
  nameWithType: Func<Element>
  fullName: System.Func<Goui.Html.Element>
  nameWithType.vb: Func(Of Element)
  fullName.vb: System.Func(Of Goui.Html.Element)
  name.vb: Func(Of Element)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Goui.Html.Element
    name: Element
    nameWithType: Element
    fullName: Goui.Html.Element
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Goui.Html.Element
    name: Element
    nameWithType: Element
    fullName: Goui.Html.Element
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.Html.Element
  commentId: T:Goui.Html.Element
  parent: Goui.Html
  name: Element
  nameWithType: Element
  fullName: Goui.Html.Element
- uid: Goui.Html
  commentId: N:Goui.Html
  name: Goui.Html
  nameWithType: Goui.Html
  fullName: Goui.Html
- uid: Goui.UI.PublishFile*
  commentId: Overload:Goui.UI.PublishFile
  name: PublishFile
  nameWithType: UI.PublishFile
  fullName: Goui.UI.PublishFile
- uid: Goui.UI.TryGetFileContentAtPath*
  commentId: Overload:Goui.UI.TryGetFileContentAtPath
  name: TryGetFileContentAtPath
  nameWithType: UI.TryGetFileContentAtPath
  fullName: Goui.UI.TryGetFileContentAtPath
- uid: Goui.UI.FileContent
  commentId: T:Goui.UI.FileContent
  parent: Goui
  name: UI.FileContent
  nameWithType: UI.FileContent
  fullName: Goui.UI.FileContent
- uid: Goui.UI.PublishJson*
  commentId: Overload:Goui.UI.PublishJson
  name: PublishJson
  nameWithType: UI.PublishJson
  fullName: Goui.UI.PublishJson
- uid: System.Func{System.Object}
  commentId: T:System.Func{System.Object}
  parent: System
  definition: System.Func`1
  name: Func<Object>
  nameWithType: Func<Object>
  fullName: System.Func<System.Object>
  nameWithType.vb: Func(Of Object)
  fullName.vb: System.Func(Of System.Object)
  name.vb: Func(Of Object)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.UI.PublishCustomResponse*
  commentId: Overload:Goui.UI.PublishCustomResponse
  name: PublishCustomResponse
  nameWithType: UI.PublishCustomResponse
  fullName: Goui.UI.PublishCustomResponse
- uid: System.Action{System.Net.HttpListenerContext,System.Threading.CancellationToken}
  commentId: T:System.Action{System.Net.HttpListenerContext,System.Threading.CancellationToken}
  parent: System
  definition: System.Action`2
  name: Action<HttpListenerContext, CancellationToken>
  nameWithType: Action<HttpListenerContext, CancellationToken>
  fullName: System.Action<System.Net.HttpListenerContext, System.Threading.CancellationToken>
  nameWithType.vb: Action(Of HttpListenerContext, CancellationToken)
  fullName.vb: System.Action(Of System.Net.HttpListenerContext, System.Threading.CancellationToken)
  name.vb: Action(Of HttpListenerContext, CancellationToken)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.HttpListenerContext
    name: HttpListenerContext
    nameWithType: HttpListenerContext
    fullName: System.Net.HttpListenerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.HttpListenerContext
    name: HttpListenerContext
    nameWithType: HttpListenerContext
    fullName: System.Net.HttpListenerContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.UI.Present*
  commentId: Overload:Goui.UI.Present
  name: Present
  nameWithType: UI.Present
  fullName: Goui.UI.Present
- uid: Goui.UI.GetUrl*
  commentId: Overload:Goui.UI.GetUrl
  name: GetUrl
  nameWithType: UI.GetUrl
  fullName: Goui.UI.GetUrl
- uid: Goui.UI.WaitUntilStarted*
  commentId: Overload:Goui.UI.WaitUntilStarted
  name: WaitUntilStarted
  nameWithType: UI.WaitUntilStarted
  fullName: Goui.UI.WaitUntilStarted
- uid: Goui.UI.RenderTemplate*
  commentId: Overload:Goui.UI.RenderTemplate
  name: RenderTemplate
  nameWithType: UI.RenderTemplate
  fullName: Goui.UI.RenderTemplate
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Goui.UI.StartWebAssemblySession*
  commentId: Overload:Goui.UI.StartWebAssemblySession
  name: StartWebAssemblySession
  nameWithType: UI.StartWebAssemblySession
  fullName: Goui.UI.StartWebAssemblySession
- uid: Goui.UI.ReceiveWebAssemblySessionMessageJson*
  commentId: Overload:Goui.UI.ReceiveWebAssemblySessionMessageJson
  name: ReceiveWebAssemblySessionMessageJson
  nameWithType: UI.ReceiveWebAssemblySessionMessageJson
  fullName: Goui.UI.ReceiveWebAssemblySessionMessageJson
- uid: Goui.UI.Styles*
  commentId: Overload:Goui.UI.Styles
  name: Styles
  nameWithType: UI.Styles
  fullName: Goui.UI.Styles
- uid: Goui.UI.StyleSelectors
  commentId: T:Goui.UI.StyleSelectors
  parent: Goui
  name: UI.StyleSelectors
  nameWithType: UI.StyleSelectors
  fullName: Goui.UI.StyleSelectors

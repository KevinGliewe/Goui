### YamlMime:ManagedReference
items:
- uid: Goui.WebSocketSession
  commentId: T:Goui.WebSocketSession
  id: WebSocketSession
  parent: Goui
  children:
  - Goui.WebSocketSession.#ctor(System.Net.WebSockets.WebSocket,Goui.Html.Element,System.Boolean,System.Double,System.Double,System.Action{System.String,System.Exception},System.Threading.CancellationToken)
  - Goui.WebSocketSession.QueueMessage(Goui.Message)
  - Goui.WebSocketSession.RunAsync
  langs:
  - csharp
  - vb
  name: WebSocketSession
  nameWithType: WebSocketSession
  fullName: Goui.WebSocketSession
  type: Class
  source:
    remote:
      path: Goui/WebSocketSession.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: WebSocketSession
    path: ../../Goui/WebSocketSession.cs
    startLine: 13
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: 'public class WebSocketSession : Session'
    content.vb: >-
      Public Class WebSocketSession

          Inherits Session
  inheritance:
  - System.Object
  - Goui.Session
  inheritedMembers:
  - Goui.Session.Id
  - Goui.Session.element
  - Goui.Session.initialWidth
  - Goui.Session.initialHeight
  - Goui.Session.createdIds
  - Goui.Session.queuedMessages
  - Goui.Session.disposeElementAfterSession
  - Goui.Session.QueueMessageLocked(Goui.Message)
  - Goui.Session.Error(System.String,System.Exception)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Goui.WebSocketSession.#ctor(System.Net.WebSockets.WebSocket,Goui.Html.Element,System.Boolean,System.Double,System.Double,System.Action{System.String,System.Exception},System.Threading.CancellationToken)
  commentId: M:Goui.WebSocketSession.#ctor(System.Net.WebSockets.WebSocket,Goui.Html.Element,System.Boolean,System.Double,System.Double,System.Action{System.String,System.Exception},System.Threading.CancellationToken)
  id: '#ctor(System.Net.WebSockets.WebSocket,Goui.Html.Element,System.Boolean,System.Double,System.Double,System.Action{System.String,System.Exception},System.Threading.CancellationToken)'
  parent: Goui.WebSocketSession
  langs:
  - csharp
  - vb
  name: WebSocketSession(WebSocket, Element, Boolean, Double, Double, Action<String, Exception>, CancellationToken)
  nameWithType: WebSocketSession.WebSocketSession(WebSocket, Element, Boolean, Double, Double, Action<String, Exception>, CancellationToken)
  fullName: Goui.WebSocketSession.WebSocketSession(System.Net.WebSockets.WebSocket, Goui.Html.Element, System.Boolean, System.Double, System.Double, System.Action<System.String, System.Exception>, System.Threading.CancellationToken)
  type: Constructor
  source:
    remote:
      path: Goui/WebSocketSession.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: .ctor
    path: ../../Goui/WebSocketSession.cs
    startLine: 26
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public WebSocketSession(WebSocket webSocket, Element element, bool disposeElementAfterSession, double initialWidth, double initialHeight, Action<string, Exception> errorLogger, CancellationToken serverToken)
    parameters:
    - id: webSocket
      type: System.Net.WebSockets.WebSocket
    - id: element
      type: Goui.Html.Element
    - id: disposeElementAfterSession
      type: System.Boolean
    - id: initialWidth
      type: System.Double
    - id: initialHeight
      type: System.Double
    - id: errorLogger
      type: System.Action{System.String,System.Exception}
    - id: serverToken
      type: System.Threading.CancellationToken
    content.vb: Public Sub New(webSocket As WebSocket, element As Element, disposeElementAfterSession As Boolean, initialWidth As Double, initialHeight As Double, errorLogger As Action(Of String, Exception), serverToken As CancellationToken)
  overload: Goui.WebSocketSession.#ctor*
  nameWithType.vb: WebSocketSession.WebSocketSession(WebSocket, Element, Boolean, Double, Double, Action(Of String, Exception), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Goui.WebSocketSession.WebSocketSession(System.Net.WebSockets.WebSocket, Goui.Html.Element, System.Boolean, System.Double, System.Double, System.Action(Of System.String, System.Exception), System.Threading.CancellationToken)
  name.vb: WebSocketSession(WebSocket, Element, Boolean, Double, Double, Action(Of String, Exception), CancellationToken)
- uid: Goui.WebSocketSession.RunAsync
  commentId: M:Goui.WebSocketSession.RunAsync
  id: RunAsync
  parent: Goui.WebSocketSession
  langs:
  - csharp
  - vb
  name: RunAsync()
  nameWithType: WebSocketSession.RunAsync()
  fullName: Goui.WebSocketSession.RunAsync()
  type: Method
  source:
    remote:
      path: Goui/WebSocketSession.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: RunAsync
    path: ../../Goui/WebSocketSession.cs
    startLine: 57
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: public Task RunAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RunAsync As Task
  overload: Goui.WebSocketSession.RunAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Goui.WebSocketSession.QueueMessage(Goui.Message)
  commentId: M:Goui.WebSocketSession.QueueMessage(Goui.Message)
  id: QueueMessage(Goui.Message)
  parent: Goui.WebSocketSession
  langs:
  - csharp
  - vb
  name: QueueMessage(Message)
  nameWithType: WebSocketSession.QueueMessage(Message)
  fullName: Goui.WebSocketSession.QueueMessage(Goui.Message)
  type: Method
  source:
    remote:
      path: Goui/WebSocketSession.cs
      branch: master
      repo: https://github.com/KevinGliewe/Goui.git
    id: QueueMessage
    path: ../../Goui/WebSocketSession.cs
    startLine: 127
  assemblies:
  - Goui
  namespace: Goui
  syntax:
    content: protected override void QueueMessage(Message message)
    parameters:
    - id: message
      type: Goui.Message
    content.vb: Protected Overrides Sub QueueMessage(message As Message)
  overridden: Goui.Session.QueueMessage(Goui.Message)
  overload: Goui.WebSocketSession.QueueMessage*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Goui
  commentId: N:Goui
  name: Goui
  nameWithType: Goui
  fullName: Goui
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Goui.Session
  commentId: T:Goui.Session
  parent: Goui
  name: Session
  nameWithType: Session
  fullName: Goui.Session
- uid: Goui.Session.Id
  commentId: F:Goui.Session.Id
  parent: Goui.Session
  name: Id
  nameWithType: Session.Id
  fullName: Goui.Session.Id
- uid: Goui.Session.element
  commentId: F:Goui.Session.element
  parent: Goui.Session
  name: element
  nameWithType: Session.element
  fullName: Goui.Session.element
- uid: Goui.Session.initialWidth
  commentId: F:Goui.Session.initialWidth
  parent: Goui.Session
  name: initialWidth
  nameWithType: Session.initialWidth
  fullName: Goui.Session.initialWidth
- uid: Goui.Session.initialHeight
  commentId: F:Goui.Session.initialHeight
  parent: Goui.Session
  name: initialHeight
  nameWithType: Session.initialHeight
  fullName: Goui.Session.initialHeight
- uid: Goui.Session.createdIds
  commentId: F:Goui.Session.createdIds
  parent: Goui.Session
  name: createdIds
  nameWithType: Session.createdIds
  fullName: Goui.Session.createdIds
- uid: Goui.Session.queuedMessages
  commentId: F:Goui.Session.queuedMessages
  parent: Goui.Session
  name: queuedMessages
  nameWithType: Session.queuedMessages
  fullName: Goui.Session.queuedMessages
- uid: Goui.Session.disposeElementAfterSession
  commentId: F:Goui.Session.disposeElementAfterSession
  parent: Goui.Session
  name: disposeElementAfterSession
  nameWithType: Session.disposeElementAfterSession
  fullName: Goui.Session.disposeElementAfterSession
- uid: Goui.Session.QueueMessageLocked(Goui.Message)
  commentId: M:Goui.Session.QueueMessageLocked(Goui.Message)
  parent: Goui.Session
  name: QueueMessageLocked(Message)
  nameWithType: Session.QueueMessageLocked(Message)
  fullName: Goui.Session.QueueMessageLocked(Goui.Message)
  spec.csharp:
  - uid: Goui.Session.QueueMessageLocked(Goui.Message)
    name: QueueMessageLocked
    nameWithType: Session.QueueMessageLocked
    fullName: Goui.Session.QueueMessageLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.Session.QueueMessageLocked(Goui.Message)
    name: QueueMessageLocked
    nameWithType: Session.QueueMessageLocked
    fullName: Goui.Session.QueueMessageLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.Session.Error(System.String,System.Exception)
  commentId: M:Goui.Session.Error(System.String,System.Exception)
  parent: Goui.Session
  isExternal: true
  name: Error(String, Exception)
  nameWithType: Session.Error(String, Exception)
  fullName: Goui.Session.Error(System.String, System.Exception)
  spec.csharp:
  - uid: Goui.Session.Error(System.String,System.Exception)
    name: Error
    nameWithType: Session.Error
    fullName: Goui.Session.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.Session.Error(System.String,System.Exception)
    name: Error
    nameWithType: Session.Error
    fullName: Goui.Session.Error
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Goui.WebSocketSession.#ctor*
  commentId: Overload:Goui.WebSocketSession.#ctor
  name: WebSocketSession
  nameWithType: WebSocketSession.WebSocketSession
  fullName: Goui.WebSocketSession.WebSocketSession
- uid: System.Net.WebSockets.WebSocket
  commentId: T:System.Net.WebSockets.WebSocket
  parent: System.Net.WebSockets
  isExternal: true
  name: WebSocket
  nameWithType: WebSocket
  fullName: System.Net.WebSockets.WebSocket
- uid: Goui.Html.Element
  commentId: T:Goui.Html.Element
  parent: Goui.Html
  name: Element
  nameWithType: Element
  fullName: Goui.Html.Element
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Action{System.String,System.Exception}
  commentId: T:System.Action{System.String,System.Exception}
  parent: System
  definition: System.Action`2
  name: Action<String, Exception>
  nameWithType: Action<String, Exception>
  fullName: System.Action<System.String, System.Exception>
  nameWithType.vb: Action(Of String, Exception)
  fullName.vb: System.Action(Of System.String, System.Exception)
  name.vb: Action(Of String, Exception)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Net.WebSockets
  commentId: N:System.Net.WebSockets
  isExternal: true
  name: System.Net.WebSockets
  nameWithType: System.Net.WebSockets
  fullName: System.Net.WebSockets
- uid: Goui.Html
  commentId: N:Goui.Html
  name: Goui.Html
  nameWithType: Goui.Html
  fullName: Goui.Html
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Goui.WebSocketSession.RunAsync*
  commentId: Overload:Goui.WebSocketSession.RunAsync
  name: RunAsync
  nameWithType: WebSocketSession.RunAsync
  fullName: Goui.WebSocketSession.RunAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Goui.Session.QueueMessage(Goui.Message)
  commentId: M:Goui.Session.QueueMessage(Goui.Message)
  parent: Goui.Session
  name: QueueMessage(Message)
  nameWithType: Session.QueueMessage(Message)
  fullName: Goui.Session.QueueMessage(Goui.Message)
  spec.csharp:
  - uid: Goui.Session.QueueMessage(Goui.Message)
    name: QueueMessage
    nameWithType: Session.QueueMessage
    fullName: Goui.Session.QueueMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Goui.Session.QueueMessage(Goui.Message)
    name: QueueMessage
    nameWithType: Session.QueueMessage
    fullName: Goui.Session.QueueMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Goui.Message
    name: Message
    nameWithType: Message
    fullName: Goui.Message
  - name: )
    nameWithType: )
    fullName: )
- uid: Goui.WebSocketSession.QueueMessage*
  commentId: Overload:Goui.WebSocketSession.QueueMessage
  name: QueueMessage
  nameWithType: WebSocketSession.QueueMessage
  fullName: Goui.WebSocketSession.QueueMessage
- uid: Goui.Message
  commentId: T:Goui.Message
  parent: Goui
  name: Message
  nameWithType: Message
  fullName: Goui.Message
